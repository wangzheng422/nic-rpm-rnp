.\" LICENSE
.\"
.\" This software program is released under the terms of a license agreement between you ('Licensee') and Mucse. Do not use or load this software or any associated materials (collectively, the 'Software') until you have carefully read the full terms and conditions of the LICENSE located in this software package. By loading or using the Software, you agree to the terms of this Agreement. If you do not agree with the terms of this Agreement, do not install or use the Software.
.\"
.\" * Other names and brands may be claimed as the property of others.
.\"
.
.TH rnp 1 "April 16, 2021"
.SH NAME
rnp \-This file describes the Linux* Base Driver
for the 10 Gigabit Family of Adapters.
.SH SYNOPSIS
.PD 0.4v
modprobe rnp [<option>=<VAL1>,<VAL2>,...]
.PD 1v
.SH DESCRIPTION
This driver is intended for \fB2.6.x\fR or later kernels. A version of the driver may already be included by your distribution and/or the kernel.org kernel.

This driver includes support for any 64 bit Linux supported system, x86_64, PPC64, ARM, etc.
.LP
This driver is only supported as a loadable module at this time. Mucse is not supplying patches against the kernel source to allow for static linking of the drivers.


For questions related to hardware requirements, refer to the documentation
supplied with your Mucse adapter. All hardware requirements listed apply to
use with Linux.
.SH OPTIONS
The following optional parameters are used by entering them on the
command line with the modprobe command.
For example:
.IP
modprobe rnp fix_eth_name=1 module_enable_ptp=1
.LP
.B fix_eth_name
.IP
.B Valid Range: 
0, 1
.IP
0 = Assign netdev name to pci slot
.IP
1 = Assign netdev name to fix, such as rnpxx
.IP
.IP
fix_eth_name is used only for test comfortable.
.LP
.B module_enable_ptp
.IP
.LP
.B Valid Range:
0, 1
.IP
0 = Disable ptp function
.IP
1 = Enabled ptp function
.LP
.B IntMode
.IP
.B Valid Range: 0-2 (0 = Legacy Int, 1 = MSI and 2 = MSI-X)
.IP
IntMode controls the allowed load time control over the type of interrupt
registered for by the driver. MSI-X is required for multiple queue
support, and some kernels and combinations of kernel .config options
will force a lower level of interrupt support. 
(Note n500 can support 0/1/2, n10/400 can support 2)
'cat /proc/interrupts' will show different values for each type of interrupt.
.B Jumbo Frames
.LP
Jumbo Frames support is enabled by changing the Maximum Transmission Unit (MTU) to a value larger than the default value of 1500.

Use the ip command to increase the MTU size. For example, enter the following where <ethX> is the interface number:

# ip link set mtu 9000 dev <ethX>
# ip link set up dev <ethX>

.LP
NOTE: The maximum MTU setting for jumbo frames is "9564(n10/n400)/9696(n500)". This corresponds to the maximum jumbo frame size of "9586(n10/n400)/9718(n500)" bytes.

NOTE: This driver will attempt to use multiple page sized buffers to receive each jumbo packet. This should help to avoid buffer starvation issues when allocating receive packets.

NOTE: Packet loss may have a greater impact on throughput when you use jumbo frames. If you observe a drop in performance after enabling jumbo frames, enabling flow control may mitigate the issue.

NOTE: For rnp10-based network connections, if you are enabling jumbo frames in a virtual function (VF), jumbo frames must first be enabled in the physical function (PF). The VF MTU setting cannot be larger than the PF MTU.
See the section "Jumbo Frames" in the Readme.
.SH SUPPORT
.LP
For additional information regarding building and installation, see the
README
included with the driver.
For general information, go to the Mucse support website at:
.B https://mucse.com/home

.LP
If an issue is identified with the released source code on a supported kernel with a supported adapter, email the specific information related to the issue to NULL.
.LP
