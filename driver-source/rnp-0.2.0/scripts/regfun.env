#!/bin/bash

#DEV=${DEV:-7001}
#NDEV=8848:$DEV
BAR=4
REGRW=/tmp/reg_rw
devices=$(lspci -d 8848: | awk -F ' ' '{print $1}')
i=0
for DEV in ${devices[@]}
do
if [ $i == $1 ]
then
	break

fi
((i++))
done

echo "select device $DEV"

bar0_phy=$(( 0x$(setpci  -s $DEV BASE_ADDRESS_0) & ~(0xff) ))
bar1_phy=$(( 0x$(setpci  -s $DEV BASE_ADDRESS_1)))
bar2_phy=$(( 0x$(setpci  -s $DEV BASE_ADDRESS_2) & ~(0xff) ))
bar3_phy=$(( 0x$(setpci  -s $DEV BASE_ADDRESS_3)))
bar4_phy=$(( 0x$(setpci  -s $DEV BASE_ADDRESS_4) & ~(0xff) ))
bar5_phy=$(( 0x$(setpci  -s $DEV BASE_ADDRESS_5)))

bar0_phy=$(printf "%lx" $bar0_phy)
bar1_phy=$(printf "0x%lx" $bar1_phy)
bar2_phy=$(printf "%lx" $bar2_phy)
bar3_phy=$(printf "0x%lx" $bar3_phy)
bar4_phy=$(printf "%lx" $bar4_phy)
bar5_phy=$(printf "0x%lx" $bar5_phy)

#echo "bar0 : $bar0_phy, bar1: $bar1_phy"

bar4_phy=$bar5_phy$bar4_phy
bar2_phy=$bar3_phy$bar2_phy
bar0_phy=$bar1_phy$bar0_phy

gcc $cwd/reg_rw.c -o $REGRW

echo "[$DEV] bar0:$bar0_phy bar2:$bar2_phy bar4:$bar4_phy"

pdev_sysfs_path()
{
    vendor=${1:-0x1dab}
    device=${2:-0x7001}

    for pdev in $(ls /sys/bus/pci/devices );
    do
        if [ "$(cat /sys/bus/pci/devices/$pdev/vendor)" == $vendor ];then
            if [ "$(cat /sys/bus/pci/devices/$pdev/device)" == $device ];then
                echo "/sys/bus/pci/devices/$pdev"
            fi
        fi
    done
}

#pdev_sysfs=$(pdev_sysfs_path 0x1dab 0x$DEV)
#if [ "$(cat $pdev_sysfs/enable)" == "0" ];then
#    echo -e "enable device: $pdev_sysfs/enable \n\n"
#    echo 1 > $pdev_sysfs/enable
#fi
net=$(ls /sys/bus/pci/devices/$DEV/net/ | awk -F ' ' '{print $0}')


pdev_sysfs=/sys/bus/pci/devices/$DEV
if [ "$(cat $pdev_sysfs/enable)" == "0" ];then
    echo -e "enable device: $pdev_sysfs/enable \n\n"
    echo 1 > $pdev_sysfs/enable
fi

pdev_sysfs_net=/sys/bus/pci/devices/$DEV/net/$net
pdev_sysfs_tx_desc_info=$pdev_sysfs_net/tx_desc_info
pdev_sysfs_tx_ring_info=$pdev_sysfs_net/tx_ring_info

tx_desc_info()
{
	echo $1 > $pdev_sysfs_tx_ring_info
	echo $2 > $pdev_sysfs_tx_desc_info
	cat $pdev_sysfs_tx_desc_info
}

tx_ring_info()
{
	echo $1 > $pdev_sysfs_tx_ring_info
	cat $pdev_sysfs_tx_ring_info

}

r32() 
{
    $REGRW r $@
}

w32() 
{
    $REGRW w $@
}

bar0_r32()
{
    $REGRW r $(( $bar0_phy + $1 )) $2 $3 $4 $5 $6 $7 $8
}

bar0_w32()
{
    $REGRW w $(( $bar0_phy + $1 )) $2 $3 $4 $5 $6 $7 $8
}

bar2_r32()
{
    $REGRW r $(( $bar2_phy + $1 )) $2 $3 $4 $5 $6 $7 $8
}

bar2_w32()
{
    $REGRW w $(( $bar2_phy + $1 )) $2 $3 $4 $5 $6 $7 $8
}

bar4_r32()
{
    $REGRW r $(( $bar4_phy + $1 )) $2 $3 $4 $5 $6 $7 $8
}
bar4_w32()
{
    $REGRW w $(( $bar4_phy + $1 )) $2 $3 $4 $5 $6 $7 $8
}

eth_w32() 
{
    $REGRW w $(( $bar4_phy + 0x10000 + $1  )) $2 
}

eth_r32() 
{
    $REGRW r $(( $bar4_phy + 0x10000 + $1  )) $2  $3 $4
}

dma_r32_n() 
{
    $REGRW rW $(( $bar4_phy + $1  )) $2  $3 $4
}

eth_r32_n() 
{
    $REGRW rW $(( $bar4_phy + 0x10000 + $1  )) $2  $3 $4
}
